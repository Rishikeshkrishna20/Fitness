# Generated by Django 4.2.9 on 2025-05-13 16:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_type', models.CharField(choices=[('cardio', 'Cardio'), ('strength', 'Strength Training'), ('flexibility', 'Flexibility & Mobility'), ('sports', 'Sports & Recreation'), ('crossfit', 'CrossFit'), ('other', 'Other')], max_length=20)),
                ('activity', models.CharField(max_length=100)),
                ('duration', models.IntegerField(help_text='Duration in minutes')),
                ('calories_burned', models.PositiveIntegerField(blank=True, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=2, help_text='Distance in kilometers', max_digits=6, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='WaterLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Amount in milliliters')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='VitalsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heart_rate', models.PositiveSmallIntegerField(blank=True, help_text='Heart rate in bpm', null=True)),
                ('blood_pressure_systolic', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Body temperature in Â°C', max_digits=4, null=True)),
                ('oxygen_saturation', models.PositiveSmallIntegerField(blank=True, help_text='Blood oxygen level in percentage', null=True)),
                ('glucose', models.DecimalField(blank=True, decimal_places=1, help_text='Blood glucose in mg/dL', max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='SleepLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.DecimalField(decimal_places=2, help_text='Duration in hours', max_digits=4)),
                ('quality', models.IntegerField(choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Fair'), (4, 'Good'), (5, 'Excellent')])),
                ('interruptions', models.PositiveSmallIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sleep_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='MoodLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood', models.IntegerField(choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Neutral'), (4, 'Good'), (5, 'Excellent')])),
                ('energy', models.IntegerField(blank=True, choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Neutral'), (4, 'Good'), (5, 'Excellent')], null=True)),
                ('stress', models.IntegerField(blank=True, choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Neutral'), (4, 'Good'), (5, 'Excellent')], null=True)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='MedicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('dosage_unit', models.CharField(max_length=20)),
                ('taken', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='MealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20)),
                ('food_items', models.JSONField(help_text='List of food items with nutritional info')),
                ('total_calories', models.PositiveIntegerField()),
                ('protein', models.DecimalField(blank=True, decimal_places=2, help_text='Protein in grams', max_digits=6, null=True)),
                ('carbs', models.DecimalField(blank=True, decimal_places=2, help_text='Carbohydrates in grams', max_digits=6, null=True)),
                ('fat', models.DecimalField(blank=True, decimal_places=2, help_text='Fat in grams', max_digits=6, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='HealthGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('weight', 'Weight Management'), ('activity', 'Physical Activity'), ('nutrition', 'Nutrition'), ('sleep', 'Sleep'), ('water', 'Hydration'), ('medication', 'Medication Adherence'), ('custom', 'Custom Goal')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('start_date', models.DateField()),
                ('target_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='active', max_length=20)),
                ('progress', models.DecimalField(decimal_places=2, default=0, help_text='Progress in percentage', max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
